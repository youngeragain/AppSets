import prompt from '@ohos.prompt';
import promptAction from '@ohos.promptAction';
import common from '@ohos.app.ability.common';
import Want from '@ohos.app.ability.Want';
import MediaRemoteUseCase, { AudioPlayerState } from '../../../usecase/MediaRemoteUseCase';


@Component
export default struct StartPage {
  @State message: string = 'Hello World'
  private mediaRemoteUseCase: MediaRemoteUseCase = globalThis.mediaRemoteUseCase

  @Builder
  MediaPlayerCard(audioPlayerState: AudioPlayerState) {
    Column() {
      Text("Now Playing").fontSize(18)
      Row() {
        Image($r("sys.media.ohos_app_icon")).width(68).height(68)
        Column() {
          Text(audioPlayerState.title()).fontSize(16)
          Text(audioPlayerState.art()).fontSize(14)
        }
      }.width('100%').padding({ top: 12, right: 12 })

      Row() {
        Text(audioPlayerState.currentDuration).fontSize(12)
        Row().layoutWeight(1)
        Text(audioPlayerState.duration).fontSize(12)
      }.width('100%').padding({ top: 12, right: 12 })

      Progress({ value: 0 }).width('100%').padding({ top: 12, right: 12 })

      Column() {
        Image($r("app.media.play_circle_FILL0_wght100_GRAD0_opsz24"))
          .width(36)
          .height(36)
          .padding({
            left: 4, top: 4, right: 4, bottom: 4
          })
          .backgroundColor(0xFFFFFF)
          .onClick(this.togglePlayback.bind(this))
      }.padding({ top: 12, right: 12, bottom: 12 }).alignItems(HorizontalAlign.Center)
    }
    .width('100%')
    .padding({ left: 12, top: 12, right: 12, bottom: 12 })
    .border({ width: 1, color: Color.Gray, radius: 12 })
    .alignItems(HorizontalAlign.Start)
  }

  /**
   * In low-code mode, do not add anything to the build function, as it will be
   * overwritten by the content generated by the .visual file in the build phase.
   */
  build() {
    Column() {
      Row() {
        this.MediaPlayerCard(this.mediaRemoteUseCase.audioPlayerState)
      }.margin({ left: 12, top: 12, right: 12 })

      Row() {

      }.height(12)

      Row() {
      }.layoutWeight(1)
    }.height('100%').onAppear(() => {
      if (this.mediaRemoteUseCase == null) {
        console.log("StartPage build mediaRemoteUseCase is null!")
      } else {
        console.log("StartPage build mediaRemoteUseCase is not null!")
      }
    })
  }

  onPageShow() {
    console.info("StartPage onPageShow mediaRemoteUseCase:" + this.mediaRemoteUseCase)
  }

  aboutToAppear() {
    console.info("StartPage aboutToAppear mediaRemoteUseCase:" + this.mediaRemoteUseCase)
  }

  togglePlayback() {
    console.log("StartPage togglePlayback")
    this.mediaRemoteUseCase.play()
  }
}